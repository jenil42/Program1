#include <iostream>
#include <string>
#include <algorithm> // For tolower
using namespace std;

const int MAX_GAMES = 3;
string games[MAX_GAMES];
int gameCount = 0;

void addGames();
void educationGame();
void numberGuessing();
void readingGame();
void displayGames();
void displayInstructions();
void askQuestion(const char question[], const char option1[], const char option2[], const char option3[], char answer, int &score);
int calculateTotalScore(int scoreNakedMoleRats, int scorePeacockMantisShrimps, int scoreOrangutans);
void displayOrangutansInfo();
void displayNakedMoleRatsInfo();
void displayPeacockMantisShrimpsInfo();
bool gameExists(const string &gameName); // Function declaration

int main()
{
	displayGames();
	return 0;
}

void displayGames()
{
	char response;

	do
	{
		if (gameCount == 0)
		{
			cout << "\nNo games available.\n";
			addGames();
		}
		else
		{
			cout << "\nAvailable Games:\n";
			for (int i = 0; i < gameCount; i++)
			{
				cout << i + 1 << ". " << games[i] << endl;
			}
			cout << "Select a game to play: ";
			int select;
			cin >> select;

			while (select < 1 || select > gameCount)
			{
				cout << "\nInvalid Option, Please input a valid option: ";
				cin >> select;
			}

			// Call the corresponding game based on selection
			switch (select)
			{
			case 1:
				educationGame();
				break;
			case 2:
				numberGuessing();
				break;
			case 3:
				readingGame();
				break;
			}
		}

		cout << "\nWould you like to play games? (y or n): ";
		cin >> response;
	} while (tolower(response) == 'y');

	cout << "Thank you for playing!" << endl;
}

void addGames()
{
	char response;

	do
	{
		cout << "You can add the following games:\n";
		cout << "1. Education Game\n";
		cout << "2. Number Guess Game\n";
		cout << "3. Reading Game\n";
		cout << "Select a game to add (1-3): ";

		int select;
		cin >> select;

		while (select < 1 || select > MAX_GAMES)
		{
			cout << "\nInvalid Option, Please input a valid option (1-3): ";
			cin >> select;
		}

		// Determine the game name to add
		string gameName;
		switch (select)
		{
		case 1:
			gameName = "Education Game";
			break;
		case 2:
			gameName = "Number Guess Game";
			break;
		case 3:
			gameName = "Reading Game";
			break;
		}

		// Check if the game already exists
		if (gameExists(gameName))
		{
			cout << "This game is already added!\n";
		}
		else
		{
			// Add selected game to the array
			games[gameCount++] = gameName;
			cout << "Game added successfully!\n";
		}

		// Ask if the user wants to add another game
		if (gameCount < MAX_GAMES)
		{
			cout << "Would you like to add another game? (y or n): ";
			cin >> response;
		}
		else
		{
			cout << "Maximum number of games reached!\n";
			response = 'n'; // Prevent further additions
		}
	} while (tolower(response) == 'y');
}

// Check if the game already exists in the games list
bool gameExists(const string &gameName)
{
	for (int i = 0; i < gameCount; i++)
	{
		if (games[i] == gameName)
		{
			return true; // Game already exists
		}
	}
	return false; // Game does not exist
}

// Game functions
void educationGame()
{
	char response;

	do
	{
		int choose;
		int firstNum, secondNum;
		cout << "1. Sum\n";
		cout << "2. Subtract\n";
		cout << "3. Multiplication\n";
		cout << "What do you want to do: ";
		cin >> choose;

		if (choose == 1)
		{
			cout << "Enter the first number: ";
			cin >> firstNum;
			cout << "Enter the second number: ";
			cin >> secondNum;
			cout << "\nThe sum of " << firstNum << " and " << secondNum << " is: " << (firstNum + secondNum) << endl;
		}
		else if (choose == 2)
		{
			cout << "Enter the first number: ";
			cin >> firstNum;
			cout << "Enter the second number: ";
			cin >> secondNum;
			cout << "\nThe subtraction of " << firstNum << " and " << secondNum << " is: " << (firstNum - secondNum) << endl;
		}
		else if (choose == 3)
		{
			cout << "Enter the first number: ";
			cin >> firstNum;
			cout << "Enter the second number: ";
			cin >> secondNum;
			cout << "\nThe multiplication of " << firstNum << " and " << secondNum << " is: " << (firstNum * secondNum) << endl;
		}
		cout << "\nWould you like to play the education game again? (y or n): ";
		cin >> response;
	} while (tolower(response) == 'y');
}

void numberGuessing()
{
	int rnum = 0, guess = 0;
	char response;
	srand(time(0));

	do
	{
		rnum = 7 + rand() % (77 - 7 + 1);
		cout << "\nGuess a number between 7 and 77: ";
		cin >> guess;

		while (guess < 7 || guess > 77)
		{
			cout << "The number is not in the valid range! Guess again: ";
			cin >> guess;
		}

		if (guess == rnum)
			cout << "\nYou guessed it right!\n";
		else
			cout << "\nWrong guess! The number was " << rnum << ".\n";

		cout << "\nWould you like to play the number guessing game again? (y or n): ";
		cin >> response;
	} while (tolower(response) == 'y');
}

void readingGame()
{
	int scoreNakedMoleRats = 0, scorePeacockMantisShrimps = 0, scoreOrangutans = 0;

	displayInstructions();
	displayNakedMoleRatsInfo();
	askQuestion("1) What is the unique feature of Naked Mole Rats?", "They have hair all over their bodies.", "They are blind.", "They are the only known eusocial mammal.", 'c', scoreNakedMoleRats);
	askQuestion("2) How do Naked Mole Rats obtain oxygen underground?", "They breathe through their skin.", "They have special adaptations in their lungs.", "They don't need oxygen.", 'a', scoreNakedMoleRats);
	askQuestion("3) What is the primary food source for Naked Mole Rats?", "Insects", "Seeds and nuts", "Tubers and roots", 'c', scoreNakedMoleRats);

	cout << "--------------------------------------------------------------------------------\n";
	displayPeacockMantisShrimpsInfo();
	askQuestion("1) What makes the vision of Peacock Mantis Shrimps remarkable?", "They have 360-degree vision.", "They see in black and white.", "They can see colors that humans can't perceive.", 'c', scorePeacockMantisShrimps);
	askQuestion("2) What is the main weapon of Peacock Mantis Shrimps?", "Sharp claws", "Powerful punches", "Venomous sting", 'b', scorePeacockMantisShrimps);
	askQuestion("3) How fast can the punch of a Peacock Mantis Shrimp accelerate?", "Faster than a bullet", "Slower than a snail", "Equal to human punch", 'a', scorePeacockMantisShrimps);

	cout << "--------------------------------------------------------------------------------\n";
	displayOrangutansInfo();
	askQuestion("1) Where are Orangutans primarily found?", "Africa", "South America", "Southeast Asia", 'c', scoreOrangutans);
	askQuestion("2) What is the diet of Orangutans mainly composed of?", "Meat", "Fruits and leaves", "Fish", 'b', scoreOrangutans);
	askQuestion("3) What is the most distinctive feature of Orangutans?", "Their ability to swing from branches", "Their bright orange fur", "Their large cheek pads called flanges", 'c', scoreOrangutans);

	cout << "--------------------------------------------------------------------------------\n";
	int totalScore = calculateTotalScore(scoreNakedMoleRats, scorePeacockMantisShrimps, scoreOrangutans);
	cout << "\nYour total score is: " << totalScore << "/9\n";
	cout << "--------------------------------------------------------------------------------\n";
	cout << "Thank You For Playing!";
}

void displayInstructions()
{
	cout << "Welcome to the Animal Adventure Educational Program!\n";
	cout << "Answer the questions and learn interesting facts about animals.\n\n";
}

void displayNakedMoleRatsInfo()
{
	cout << "Naked Mole Rats:\n";
	cout << "-----------------------\n";
	cout << "Naked mole rats are fascinating creatures known for their eusocial behavior,\n";
	cout << "living in colonies with a single reproductive female known as the queen.\n";
	cout << "They have a specialized lifestyle and are native to East Africa.\n";
}

void displayPeacockMantisShrimpsInfo()
{
	cout << "Peacock Mantis Shrimps:\n";
	cout << "-----------------------\n";
	cout << "These marine crustaceans have complex eyes and powerful punches.\n";
}

void displayOrangutansInfo()
{
	cout << "Orangutans:\n";
	cout << "-----------------------\n";
	cout << "Large apes native to rainforests, critically endangered due to habitat loss.\n";
}

void askQuestion(const char question[], const char option1[], const char option2[], const char option3[], char answer, int &score)
{
	char userAnswer;
	while (true)
	{
		cout << question << endl;
		cout << "a) " << option1 << endl;
		cout << "b) " << option2 << endl;
		cout << "c) " << option3 << endl;
		cout << "Your answer: ";
		cin >> userAnswer;

		if (tolower(userAnswer) == answer)
		{
			cout << "Correct!\n";
			score++;
		}
		else
		{
			cout << "Incorrect!\n";
		}
		break; // Exit the loop after one question
	}
}

int calculateTotalScore(int scoreNakedMoleRats, int scorePeacockMantisShrimps, int scoreOrangutans)
{
	return scoreNakedMoleRats + scorePeacockMantisShrimps + scoreOrangutans;
}
